*오늘 배운 것들

<video>
video를 홈페이지에서 재생되게 할 때 생각해봐야할 거
	1. 순간 트래픽 부하분산 
	2. 월간 트래픽 비용 관리 측면
codec과 format
	브라우저에 따라 지원하는 코덱과 포맷은 다르다. 
	코덱은 촬영을 통해 얻은 원본 영상을 편집해서 압축한 결과물
	포맷은 코덱을 담아 재생 가능한 플레이어에 전달되는 컨테이너 역할
	코덱과 포맷 둘다 합친게 바로 비디오

<form>
정보를 입력하는 영역을 가리키는 태그
이 태그로 입력하고 제출하게 되면 데이터가 서버에 전송이 되고 
전송된 데이터는 웹 서버가 처리하며 처리 후 로그인 결과 
다른 웹 페이지를 클라이언트에 전송한다. 
여기서    서버: 서빙. 24시간 돌아가는 컴퓨터, 대부분 ip 연결
	웹서버: 정적 파일을 서빙. php와 같은 프로그래밍 언어도 처리
	앱 서버: 두뇌 역할
	데이터베이스: 데이터 저장(이미지와 같은 경우에는 이미지 경로만 저장)
	API 서버: 카페에 있는 카운터 직원같은 느낌. 
		 API는 프로그램들이 서로 상호작용하는 것을 도와주는 매개체로 볼 수 있다.

	
	로컬: 트래픽 확장이 어려움, 들어오는 트래픽을 제한하지만 공짜.
		(전기세랑 인터넷 비용만 내면 됨)
	       정전에도 강하다.
	클라우드: 비싸다는게 단점이지만, 서버 확장이 쉽고 이전도 쉽다. 
		ip 할당받거나 도메인 연결하기도 쉽다. https 인증도 쉽다.
form 동작 방식
	1. 웹페이지에 있는 form에 데이터를 입력한다
	2. 웹 페이지 내 액션이 일어나게 되면 데이터는 웹서버로 이동하게 된다
	3. 웹서버는 데이터를 처리하기 위해 app을 호출한다. 이때 app은 물리적으로 별도의 서버일 수 있다.
	4. 필요에 따라 app은 데이터베이스로 데이터를 전송한다. 이때 데이터베이스는 물리적으로 별도의 서버일 수 있다.
	5. 데이터베이스에서 crud 작업이 일어나고 작업 결과를 app으로, web으로 전송한다.
   	   crud: create-read-update-delete
	6. 웹 서버는 받은 결과를 클라이언트 브라우저에게 보낸다.
	7. 사용자 브라우저는 받은 페이지를 렌더링하여 사용자에게 보내준다.
form의 속성
action과 method 속성을 가진다.
action: 입력 값을 전송할 페이지를 나타낸다. 
method: 폼의 데이터를 전송할 방법을 정의한다. 
	속성값으로는 get과 post가 있다. 
	get은 웹서버에 데이터를 요청할 때 사용하며, 주소에 데이터를 입력하는 방식.
	근데 민감데이터(id,pw와 같은)는 get으로 하면 안 된다. 
	주소에 그대로 노출되서 데이터를 훔쳐볼 수 있어서.
	post는 파일을 올리거나, 보안이 중요한 데이터를 보낼 때 사용한다.
	url에 데이터를 알려줘도 괜찮으면-get
	민감정보라 해킹우려가 있으면-post

<input>
사용자가 다양하게 폼 태그에 입력할 수 있는 공간을 만들어주고, 사용자에게 정보를 입력받는다.
또한 사용자가 입력하는 정보는 개인정보이기 때문에 method의 값은 post로 한다.
input의 속성
input의 type 속성은 무조건 하나의 타입만 가진다. 
name-태그 이름 지정
readonly-태그를 읽기 전용으로 한다.
maxlength-최대 글자 수 지정
minlength-최소 글자 수 지정
required-필수 태그로 지정. 필수 태그를 입력하지 않고 submit 버튼을 누르면 에러가 떠 데이터가 전송되지 않는다.
autofocus-웹페이지가 로딩되면 이 속성을 지정한 태그로 포커스가 바뀐다.
placeholder-입력할 값에 대한 힌트를 준다.
pattern-정규표현식을 사용하여 특정 범위 내 유효한 값을 입력받을 때 사용한다.

input 타입
text-입력한 텍스트를 그대로 보여주는 input
button-누를 수 있는 간단한 버튼 만드는 input
password-***처리된 text input
search-검색창으로 사용할 수 있는 input
date-날짜 입력
time-시간 입력
range-슬라이드 바 생성
number-수를 선택
color-색을 선택
radio-선택 항목 중 하나만 선택 가능하게 하는 input
checkbox-선택 항목 중 0개 이상 선택 가능한 input
file-파일 업로드
email-이메일 주소 입력하게 하는 input
url-웹페이지 주소를 입력하게 하는 input
tel-전화번호를 입력하게 하는 input

<label>
웹접근성을 높여 시각장애인들도 폼을 작성할 수 있게 하는 것
이름 :
<input type="text" name="name">이라고 썼을 경우 '이름' 부분을 클릭하면 '이름'부분에만 블록처리되는데
label로 감싸주면 '이름'을 누를 경우 옆에 있는 입력창에 포커싱이 된다.

<select>
드롭다운 리스트 박스 생성
*select의 속성들
multiple-사용자가 여러개의 요소를 선택할 수 있도록 하는 것.
단순 클릭으로는 안되고 윈도우는 컨트롤 키, 맥에서는 커맨드 키를 눌러야 가능.
size-드롭다운 리스트에서 한번에 보여줄 수 있는 option의 개수 조절
*option의 속성들
value-선택값에 따라 서버에 어떤 값을 전송할지 설정 가능
selected-페이지가 로딩되고 난 뒤 기본으로 선택되는 옵션을 나타내는데 사용

<fieldset>
자식 요소로 사용되는 폼 컨트롤들을 그룹화 가능
특히 폼 내용이 방대하여 섹션별로 나눌 필요성이 있을 경우 사용

<legend>
fieldset 태그 바로 뒤에 위치. 폼 그룹의 목적을 나타내는 제목

<button>
클릭 가능한 버튼.
*버튼 태그의 타입
submit-버튼이 서버로 양식 데이터 제출
reset-form의 모든 값 초기화
button-클릭 가능한 버튼. 기능을 부여하지 않으면 별다른 작동하지 않는다.

<textarea>
여러 줄의 text를 입력할 수 있는 텍스트박스 생성

<datalist>
select와 input을 섞어서 사용할 수 있도록 한다. 
사용자에게 기본적으로 선택할 수 있는 옵션을 제공함과 동시에, 
만약 옵션에 선택하고 싶은 값이 없는 경우 사용자가 원하는 임의의 값을 입력받을 수 있도록 편의성 제공

----tabular data
<table>
테이블을 생성할 때 사용(표)
table, tr, td
tr=가로부분
rowspan="숫자" 아래 방향으로 숫자만큼 병합한다
colspan="숫자" 옆 방향으로 숫자만큼 병합한다

